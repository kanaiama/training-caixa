/**
 * jQuery Black Calculator
 * @name jquery.calculator.js
 * @description Calculator
 * @author Rafael Carvalho Oliveira - http://www.blackhauz.com.br/
 * @version beta
 * @date July 20, 2012
 * @copyright (c) 2012 Rafael Carvalho Oliveira - http://www.blackhauz.com.br/
 * @license Dual licensed under the MIT or GPL Version 2 licenses
 * @example http://blackhauz.com.br/blog/wp-content/examples/black_calculator
 */ (function ($) {
    $.fn.blackCalculator = function (options) {
        var settings = $.extend({}, $.fn.blackCalculator.defaults, options);
        if (settings.type == 'advanced') {
            var whiteList = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '+', '*', '/', '%'];
			var operadores = ['-', '+', '*', '/', '1x', '%'];
        } else { 
            var whiteList = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '+', '*', '/'];
			var operadores = ['-', '+', '*', '/'];
        }
        if (!settings.cssManual) {
            var styles = '<link rel="stylesheet" type="text/css" href="' + settings.css + 'black_calculator.css" />';
            styles += '<!--[if lt IE 9]><link rel="stylesheet" type="text/css" href="' + settings.css + 'black_calculator_ie.css" />';
            styles += '<style type="text/css">';
            styles += '.calculator a, .calculator, .calculator form input[type=text] { position:relative; }';
            styles += '</style><![endif]-->';
            $('head').append(styles)
        }
        var form = '<form method="post" action="javascript:void(0)" id="blackCalculatorForm"><fieldset>';
        form += '<label for="blackCalculator">' + settings.language.value + '</label>';
        form += '<input type="text" name="blackCalculator" id="blackCalculator" class="auto-tab-index-off"/></fieldset></form>';
        $(this).addClass('blackCalculator');
        $(this).prepend(form);
        var lines = '<div class="bgbase"><a href="javascript:void(0)" title="' + settings.language.backspace + '"  data-buttom="<"></a>';
        if (settings.type == 'advanced') {
        	lines += '<a href="javascript:void(0)" title="' + settings.language.clear + '" data-buttom="c">' + settings.language.clear + '</a>';
            //lines += '<a href="javascript:void(0)" title="(" data-buttom="(">(</a>';
            //lines += '<a href="javascript:void(0)" title=")" data-buttom=")">)</a>'
        } else {
            lines += '<a href="javascript:void(0)" title="' + settings.language.clear + '"  data-buttom="c">' + settings.language.clear + '</a>'
        }
        lines += '<a href="javascript:void(0)" title="7" data-buttom="7">7</a>';
        lines += '<a href="javascript:void(0)" title="8" data-buttom="8">8</a>';
        lines += '<a href="javascript:void(0)" title="9" data-buttom="9">9</a>';
        if (settings.type == 'advanced') {
            lines += '<a href="javascript:void(0)"   title="&#247;" data-buttom="/">&#247;</a>';
            lines += '<a href="javascript:void(0)"   title="%" data-buttom="%">%</a>'
        } else {
            lines += '<a href="javascript:void(0)"   title="/" data-buttom="/">/</a>'
        }
        lines += '<a href="javascript:void(0)"  title="4" data-buttom="4">4</a>';
        lines += '<a href="javascript:void(0)"  title="5" data-buttom="5">5</a>';
        lines += '<a href="javascript:void(0)"  title="6" data-buttom="6">6</a>';
        if (settings.type == 'advanced') {
            lines += '<a href="javascript:void(0)" title="X" data-buttom="*">X</a>';
            lines += '<a href="javascript:void(0)" title="1x" data-buttom="1x">1/x</a>'
        } else {
            lines += '<a href="javascript:void(0)" title="*" data-buttom="*">*</a>'
        }
        lines += '<a href="javascript:void(0)"  title="1" data-buttom="1">1</a>';
        lines += '<a href="javascript:void(0)"  title="2" data-buttom="2">2</a>';
        lines += '<a href="javascript:void(0)"  title="3" data-buttom="3">3</a>';
        if (settings.type == 'advanced') {
            lines += '<a href="javascript:void(0)"   title="-" data-buttom="-">-</a>'
        } else {
            lines += '<a href="javascript:void(0)"  title="-" data-buttom="-">-</a>'
        }
        lines += '<div class="clear"></div>';
        if (settings.type == 'advanced') {
            lines += '<a href="javascript:void(0)"  title="0" data-buttom="0">0</a>'
        } else {
            lines += '<a href="javascript:void(0)" title="0" data-buttom="0">0</a>'
        }
        lines += '<a href="javascript:void(0)"  title="," data-buttom=",">,</a>';
        if (settings.type == 'simple') {
            lines += '<a href="javascript:void(0)"   title="=" data-buttom="=">=</a>'
        }
        if (settings.type == 'advanced') {
            lines += '<a href="javascript:void(0)"   title="+" data-buttom="+">+</a>'
        } else {
            lines += '<a href="javascript:void(0)"   title="+" data-buttom="+">+</a>'
        }
        if (settings.type == 'advanced') {
            lines += '<a href="javascript:void(0)"   title="=" data-buttom="=" ></a></div>'
        }
        lines += '<div class="clear"></div>';
        $(this).append(lines);
        if (settings.allowKeyboard) {
            $('.blackCalculator').keypress(function (event) {
                var button = String.fromCharCode(event.charCode);
                var value = $('#blackCalculator').val();
                if (!inArray(whiteList, button)) {
                    return false
                }
            })
        } else {
            $('#blackCalculator').keypress(function (event) {
                return false
            })
        }
        
        $('#blackCalculator').keydown(function (tecla) {
        	
        	var teclaPress = tecla.keyCode || tecla.which;
			
			if (teclaPress == 8){
				$(".blackCalculator [data-buttom='<']").click();
				return false;
			}
        	
        	
        });
        
		$('#blackCalculator').keypress(function (tecla) {
			var teclaPress = tecla.keyCode || tecla.which;
			
			if (teclaPress == 8){
				$(".blackCalculator [data-buttom='<']").click();	
			}
			else if (teclaPress == 13){
				$(".blackCalculator [data-buttom='=']").click();
			}
			else {
				$(".blackCalculator [data-buttom='"+String.fromCharCode(teclaPress)+"']").click();	
			}
			return false;
		});
		
		
		
		$('#blackCalculator').keyup(function (tecla) {
			return false;
		});
		
		var tempVal = "";
		
        $('.blackCalculator a').click(function () {
            var button = $(this).data('buttom');
            var value = $('#blackCalculator').val();
            if(value!= null && value.length >= 18 && button != '<' && button != '=' && button != 'c' && !inArray(operadores, button)){
            	if(ultimoDigitoEhOperador(value)){
            		tempVal += value;
            		value = "";
            	}else{
            		$('#blackCalculator').focus();
            		return this;
            	}
            	
            }
			if (value == 'Infinito') {
				value = '';
			}
			
            if (inArray(whiteList, button)) {
				// Verifica se foi um operador digitado e se o ultimo digito eh um operador. 
				// Ira previnir que sejam digitados dois operadores simultaneos e/ou virgula
				if (inArray(operadores, button)) {
					if (!ultimoDigitoEhOperador(value) && !ultimoDigitoEhVirgula(value)) {
						if (value != "" || button == '+' || button == '-') {
							//$('#blackCalculator').val(value + button);
							value = value + button;
						}
					}
				}
				else {
					//$('#blackCalculator').val(value + button);
					value += button;
				}
                
            } else {
                if (button == 'c') {
                    //$('#blackCalculator').val(null)
                	value = null;
                	tempVal = "";
                } else if (button == '1x') {
                	if (!ultimoDigitoEhVirgula(value)) {
                		//$('#blackCalculator').val(calcularValor1x(value));
                		value = calcularValor1x(value);
                	}
                } else if (button == '<') {
                   // $('#blackCalculator').val(value.substr(0, value.length - 1))
                	value = value.substr(0, value.length - 1);
                } else if (button == '%') {
                	//$('#blackCalculator').val(value + '%')
                	value = value + '%';
                } else if (button == ',') {
					if (!ultimoDigitoEhVirgula(value) && podeIncluirVirgula(value)) {
						var virgulaAppend = value != "" && !ultimoDigitoEhOperador(value) ? ',' : '0,';
						//$('#blackCalculator').val(value + virgulaAppend);
						value = value + virgulaAppend;
					}
                } else if (button == '=') {
                	//$('#blackCalculator').val(calcularResultado(value));
                	value = tempVal + value;
                	value = calcularResultado(value);
                	tempVal = "";
                }
            }
            
            value = formataValores(value);
            
            if(value!= null && value.length > 10 && bigFont){
            	previousFontSize = $('#blackCalculator').css("font-size");
            	bigFont = false;
            	$('#blackCalculator').css("font-size", "15px");
            }
            
            if(value!= null && value.length <= 10 && !bigFont){
            	bigFont = true;
            	$('#blackCalculator').css("font-size", previousFontSize);
            }
            
           
            
            $('#blackCalculator').val(value);
            $('#blackCalculator').focus();
        });
        return this
    };
    
    var bigFont = true;
    var previousFontSize = "";
    
    $.fn.blackCalculator.defaults = {
        type: 'simple',
        allowKeyboard: false,
        cssManual: false,
        css: '/statics-core/css/',
        language: {
            value: 'Value',
            backspace: 'Backspace',
            clear: 'Clear'
        }
    };
    
    $(document).ready(function(){
    	$("#blackCalculator").bind ("cut copy paste", function (e){
    		e.preventDefault();
    	});
    });
    
    function isNumber(value){
    	return !(isNaN(parseInt(value)));
    }
    	
    function formataValores(str){
    	
    	if(str == null) return str;
    	if(str == "") return str;
    	
    	var valores = str.match(/[+*\/%-]|[0-9,\.]+/g);
    	for (var i = 0; i < valores.length; i++){
    		
    		 while(strpos(valores[i], '.', 0)){
    			 valores[i] = valores[i].replace('.', '');
             }
    		 
    		 var valoresSemVirgula = valores[i].split(",");
    		
    		if(isNumber(valoresSemVirgula[0])){
    			valoresSemVirgula[0] = $.format.number(Number(valoresSemVirgula[0]), '#,###,###,###');
    		}
    		
    		valores[i] = valoresSemVirgula.join(",");
    	}
    	
    	return valores.join("");
    };
    
    function inArray(haystack, needle) {
        var length = haystack.length;
        for (var i = 0; i < length; i++) {
            if (haystack[i] == needle) return true
        }
        return false
    };

    function strpos(haystack, needle, offset) {
        var i = (haystack + '').indexOf(needle, (offset || 0));
        return i === -1 ? false : i
    }
	
	function ultimoDigitoEhOperador(value) {
		if (value && value.length > 0) {
			var ultimoDigito = value.charAt(value.length - 1);
			var operadores = ['-', '+', '*', '/', '%'];
			if (inArray(operadores, ultimoDigito)) {
				return true;
			}
		}
		return false;
	}
	
	function ultimoDigitoEhVirgula(value) {
		if (value && value.length > 0) {
			var ultimoDigito = value.charAt(value.length - 1);
			if (ultimoDigito == ',' || ultimoDigito == '.') {
				return true;
			}
		}
		return false;
	}
	
	function calcularResultado(value) {
        try {
            var powPattern = /\d+\^\d+/;
            while (strpos(value, '^', 0)) {
                if (powPattern.test(value)) {
                    var elements = String(value.match(powPattern));
                    var numbers = elements.split('^');
                    value = value.replace(powPattern, Math.pow(numbers[0], numbers[1]))
                } else {
                    break
                }
            }
            var percentPattern = /\d+\*\d+\%/;
            while (strpos(value, '%', 0)) {
                if (percentPattern.test(value)) {
                    var elements = String(value.match(percentPattern));
                    var numbers = elements.split('*');
                    numbers[1] = numbers[1].replace('%', '');
                    value = value.replace(percentPattern, numbers[0] * (numbers[1] / 100))
                } else {
                    break
                }
            }
            percentPattern = /\d+\+\d+\%/;
            while (strpos(value, '%', 0)) {
                if (percentPattern.test(value)) {
                    var elements = String(value.match(percentPattern));
                    var numbers = elements.split('+');
                    numbers[1] = numbers[1].replace('%', '');
                    value = value.replace(percentPattern, parseFloat(numbers[0]) + (numbers[0] * (numbers[1] / 100)))
                } else {
                    break
                }
            }
            percentPattern = /\d+\-\d+\%/;
            while (strpos(value, '%', 0)) {
                if (percentPattern.test(value)) {
                    var elements = String(value.match(percentPattern));
                    var numbers = elements.split('-');
                    numbers[1] = numbers[1].replace('%', '');
                    value = value.replace(percentPattern, parseFloat(numbers[0]) - (numbers[0] * (numbers[1] / 100)))
                } else {
                    break
                }
            }
            percentPattern = /\d+\/\d+\%/;
            while (strpos(value, '%', 0)) {
                if (percentPattern.test(value)) {
                    var elements = String(value.match(percentPattern));
                    var numbers = elements.split('/');
                    numbers[1] = numbers[1].replace('%', '');
                    value = value.replace(percentPattern, numbers[0] / (numbers[1] / 100))
                } else {
                    break
                }
            }
            while(strpos(value, '.', 0)){
            	value = value.replace('.', '');
            }
            while (strpos(value, ',', 0)) {
                value = value.replace(',', '.');
            }
            var ultimoOperador = "";
            if(ultimoDigitoEhOperador(value)){
            	ultimoOperador = value.charAt(value.length - 1);
            	value = value.substring(0, value.length - 1);
            }
			var resultado = eval(value);
			
			// foi solicitado para exibir a palavra infinito em portugues
			if (!isFinite(resultado)) {
				resultado = "Infinito";
			} else {
				resultado = String(resultado).replace('.', ',');
			}
			resultado += ultimoOperador;
            return resultado;
        } catch (err) {
            //alert(err.message)
            while (strpos(value, '.', 0)) {
                value = value.replace('.', ',');
            }
        	return value;
        }
	}
	
	function calcularValor1x(value) {
		if (value && value.length > 1 && !ultimoDigitoEhOperador(value)) {
			var cont = 0;
			var valueExpr;
			var ultimoDigito;
			var ultimoValor;
			var operadores = ['-', '+', '*', '/', '%'];
			if (!contemOperadores(value, operadores)) return '1/' + value;
			do {
				cont++;
				ultimoDigito = value.charAt(value.length - cont);
			} while (!inArray(operadores, ultimoDigito));
			valueExpr = calcularResultado(value.substring(0, value.length - cont));
			ultimoValor = value.substring(value.length - cont + 1, value.length);
			return valueExpr + ultimoDigito + '1/' + ultimoValor;
		} else if (value.length == 1) {
			return '1/' + value;
		}
		return value;
	}
	
	function contemOperadores(value, operadores) {
		for (var i = 0; i < operadores.length; i++) {
			if (value.indexOf(operadores[i]) != -1) {
				return true;
			}
		}
		return false;
	}
	
	function podeIncluirVirgula(value) {
		if (value.charAt(value.length - 1) == '%') {
			return false;
		} else if (value == "" || ultimoDigitoEhOperador(value) || ultimoDigitoEhVirgula(value)) {
			return true;
		} else {
			var cont = 0;
			var temVirgula = false;
			var operadores = ['-', '+', '*', '/', '%'];
			var ultimoDigito;
			do { 
				cont++;
				ultimoDigito = value.charAt(value.length - cont);
				temVirgula = ultimoDigito == ',';
			} while (!inArray(operadores, ultimoDigito) && !temVirgula && cont < value.length);
			return !temVirgula;
		}
	}

})(jQuery);